#!/bin/bash

#
# Copyright (c) 2014,  Regents of the Columbia University 
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other 
# materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#


# variables
APP_VER=5.6.21
APP_LV2VER=5.6
APP_DIR=/home/ubuntu/apps/mysql
BEN_VER=0.4.12.5


# working folder
cd $APP_DIR


# remove folders
rm -rf mysql-$APP_VER
rm -rf sysbench-$BEN_VER
rm -rf install
rm -rf benchmark

# download and extract
if [ ! -f mysql-$APP_VER.tar.gz ]; then
    wget http://dev.mysql.com/get/Downloads/MySQL-$APP_LV2VER/mysql-$APP_VER.tar.gz
fi
tar zxvf mysql-$APP_VER.tar.gz


# build mysql
cd mysql-$APP_VER
mkdir ../install
mkdir ../install/data
mkdir ../install/etc
cmake -D MYSQL_DATADIR=$APP_DIR/install/data -D SYSCONFDIR=$APP_DIR/install/etc -D CMAKE_INSTALL_PREFIX=$APP_DIR/install -D MYSQL_TCP_PORT=3366 -D MYSQL_UNIX_ADDR=/tmp/mysql.sock .
make
make install
cd ../install


# write config file
echo "[mysqld]" >> my.cnf
echo "basedir = $APP_DIR/install" >> my.cnf
echo "datadir = $APP_DIR/install/data" >> my.cnf
echo "port = 3366" >> my.cnf
echo "socket = $APP_DIR/install/mysql.sock" >> my.cnf
# Server SQL Modes
# - NO_ENGINE_SUBSTITUTION:
#   Control automatic substitution of the default storage engine when a statement such as CREATE TABLE or
#   ALTER TABLE specifies a storage engine that is disabled or not compiled in.
#
#   Because storage engines can be pluggable at runtime, unavailable engines are treated the same way:
#   With NO_ENGINE_SUBSTITUTION enabled, an error occurs and the table is not created or altered if the
#   desired engine is unavailable.
#
# - STRICT_TRANS_TABLES
#   trict mode controls how MySQL handles invalid or missing values in data-change statements such as INSERT
#   or UPDATE. A value can be invalid for several reasons. For example, it might have the wrong data type for
#   the column, or it might be out of range.
#
#   For transactional tables, an error occurs for invalid or missing values in a data-change statement when
#   STRICT_TRANS_TABLES is enabled. The statement is aborted and rolled back.

# Alternative Storage Engines
# Storage engines are MySQL components that handle the SQL operations for different table types.
# MySQL Server uses a pluggable storage engine architecture that enables storage engines to be loaded into
# and unloaded from a running MySQL server.
# - InnoDB
#   The default storage engine in MySQL. InnoDB is a transaction-safe (ACID compliant) storage engine for
#   MySQL that has commit, rollback, and crash-recovery capabilities to protect user data. InnoDB row-level
#   locking (without escalation to coarser granularity locks) and Oracle-style consistent nonlocking reads
#   increase multi-user concurrency and performance. To maintain data integrity, InnoDB also supports FOREIGN
#   KEY referential-integrity constraints.
#
# - MyISAM
#   These tables have a small footprint. Table-level locking limits the performance in read/write workloads,
#   so it is often used in read-only or read-mostly workloads in Web and data warehousing configurations.
#   No foreign key support.
echo "sql_mode = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES" >> my.cnf
echo >> my.cnf


# mysql_install_db initializes the MySQL data directory and creates the system tables that it contains, if
# they do not exist (e.g., grant system tables).
# mysql_install_db creates a default option file named my.cnf in the base installation directory. If my.cnf
# already exists, mysql_install_db assumes it to be in use and writes a new file named my-new.cnf instead.

# configure mysql install
# --basedir=dir_name
#        The path to the MySQL installation directory.
scripts/mysql_install_db --basedir=$APP_DIR/install --datadir=$APP_DIR/install/data --defaults-file=$APP_DIR/install/my.cnf
rm my-new.cnf

# In MySQL, the TIMESTAMP data type differs in nonstandard ways from other data types:
# TIMESTAMP columns not explicitly declared with the NULL attribute are assigned the NOT NULL attribute. (Columns
# of other data types, if not explicitly declared as NOT NULL, permit NULL values.) Setting such a column to
# NULL sets it to the current timestamp.
# With this variable enabled, the server handles TIMESTAMP as follows instead:
# TIMESTAMP columns not explicitly declared as NOT NULL permit NULL values. Setting such a column to NULL sets
# it to NULL, not the current timestamp.

# start server, wait till socket is there
bin/mysqld --defaults-file=$APP_DIR/install/my.cnf --basedir=$APP_DIR/install --datadir=$APP_DIR/install/data --log-error=$APP_DIR/install/data/mysql.err --pid-file=$APP_DIR/mysql.pid --socket=$APP_DIR/install/mysql.sock --port=3366 --explicit_defaults_for_timestamp=TRUE &
sleep 5
# while [ ! -S $APP_DIR/install/mysql.sock ] ; do
#     sleep 1
# done;


# set root user and create dbtest
bin/mysqladmin -u root password 'password' --socket=$APP_DIR/install/mysql.sock
# mysql is one of the client programs. It's a simple SQL shell with input line editing capabilities.
# -e, --execute=name
#        Execute command and quit.
bin/mysql --defaults-file=$APP_DIR/install/my.cnf --socket=$APP_DIR/install/mysql.sock -uroot -ppassword -e "CREATE DATABASE dbtest;"

# mysqladmin [OPTIONS] command command....
# mysqladmin is a client for performing administrative operations. You can use it to check the server's configuration
# and current status, to create and drop databases, and more.

# shutdown server
bin/mysqladmin --user=root --password=password --socket=$APP_DIR/install/mysql.sock shutdown


# download and extract sysbench benchmark
cd ../
if [ ! -f sysbench-$BEN_VER.tar.gz ]; then
    wget http://downloads.mysql.com/source/sysbench-$BEN_VER.tar.gz
fi
if [ ! -f sysbench-$BEN_VER.tar ]; then
    gunzip sysbench-$BEN_VER.tar.gz
fi
tar xvf sysbench-$BEN_VER.tar


# build benchmark
mkdir benchmark
cd sysbench-$BEN_VER
./autogen.sh
./configure --prefix=$APP_DIR/benchmark --with-mysql-includes=$APP_DIR/install/include --with-mysql-libs=$APP_DIR/install/lib
make
make install

